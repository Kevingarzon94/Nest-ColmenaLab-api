version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hospital_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hospital_colmenalab
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hospital_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hospital_api
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: hospital_colmenalab
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hospital_network
    volumes:
      - ./logs:/app/logs

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: hospital_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@hospital.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '5050:80'
    networks:
      - hospital_network
    depends_on:
      - postgres

volumes:
  postgres_data:

networks:
  hospital_network:
    driver: bridge